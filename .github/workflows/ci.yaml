name: CI
on:
  pull_request:
  push:
jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/richmorj/ambel:20may22
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Work-around Permission Issue
      run: git config --global --add safe.directory /__w/ambel/ambel
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build and Test
      run: |
        sbt -v +"testOnly ambel.Apb2NetUnitTester -- -Dbackend=verilator"
        sbt -v +"testOnly ambel.Apb2SliceUnitTester -- -Dbackend=verilator"
        sbt -v +"testOnly ambel.Apb2CSTrgtUnitTester -- -Dbackend=verilator"
        sbt -v +"testOnly ambel.Apb2RegFileUnitTester -- -Dbackend=verilator"
        find test_run_dir/ -name "Apb2Net*.sv" | xargs -I {} cp -u {} .
        find test_run_dir/ -name "Apb2Slice*.sv" | xargs -I {} cp -u {} .
        find test_run_dir/ -name "Apb2CSTrgt*.sv" | xargs -I {} cp -u {} .
        find test_run_dir/ -name "Apb2RegFile*.sv" | xargs -I {} cp -u {} .
        echo "Generating coverage reports..."
        ./src/main/scripts/mergeModuleCov.bash Apb2Net
        ./src/main/scripts/mergeModuleCov.bash Apb2Slice
        ./src/main/scripts/mergeModuleCov.bash Apb2CSTrgt
        ./src/main/scripts/mergeModuleCov.bash Apb2RegFile
        ./src/main/scripts/genCovReport.bash
    # - name: Upload Coverage to codecov.io
      # run: |
      #   curl -Os https://uploader.codecov.io/latest/linux/codecov
      #   chmod +x codecov
      # Can't figure out how to get codecov working with lcov txt reports
      # uses: codecov/codecov-action@v2
      # with:
      #   directory: ./coverage/
      #   fail_ci_if_error: true
      #   path_to_write_report: ./coverage/codecov_report.txt
      #   verbose: true
    - name: Publish HTML Coverage on GitHub Pages
      uses: ftnext/action-push-ghpages@v1.0.0
      with:
        build_dir: coverage/html
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v3
      with:
        path: coverage/html
    - name: Create Badges Directory
      run: mkdir -p badges
    - name: Generate Coverage Badge
      run: |
        node ./src/main/scripts/covbadge.js > .github/badges/coverage.svg
    - name: Commit and Push Coverage Badge
      uses: EndBug/add-and-commit@v9 
      with:
        add: '.github/badges/coverage.svg'
        author_name: GitHub Action
        author_email: action@github.com
        message: 'Updating coverage badge'
